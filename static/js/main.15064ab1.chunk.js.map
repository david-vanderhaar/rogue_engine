{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/Move.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Exploding.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/HasTargetingCursor.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Equiping.js","nystrum/Entities/HasInnerGates.js","nystrum/Entities/Cloning.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Modes/default.js","nystrum/items.js","nystrum/Maps/helper.js","nystrum/Maps/generator.js","nystrum/Modes/flume.js","nystrum/Modes/index.js","nystrum/Modes/castle.js","nystrum/Modes/chunin.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Equipment.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/Screen/Level.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/DropItem.js","nystrum/Keymap/helper.js","nystrum/Keymap/KeyActions/activateDropItem.js","nystrum/Actions/UnequipItemToTile.js","nystrum/Keymap/KeyActions/activateEquipment.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/Keymap/KeyActions/activateInventory.js","nystrum/Keymap/KeyActions/activateThrow.js","nystrum/Actions/SprayWater.js","nystrum/Actions/CursorMove.js","nystrum/Keymap/KeyActions/moveCursor.js","nystrum/Keymap/KeyActions/activateProjectile.js","nystrum/Keymap/KeyActions/walk.js","nystrum/Actions/CloneSelf.js","nystrum/Actions/PickupItem.js","nystrum/Actions/EquipItemFromTile.js","nystrum/Keymap/KeyActions/push.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/MoveSubstitution.js","nystrum/Actions/Tackle.js","nystrum/Keymap/KeyActions/activateFlyingLotus.js","nystrum/statusEffects.js","nystrum/Actions/AddStatusEffect.js","nystrum/Keymap/KeyActions/drunkenFist.js","nystrum/Actions/MultiTargetAttack.js","nystrum/Keymap/KeyActions/chop.js","nystrum/Actions/ActionResources/ChakraResource.js","nystrum/Actions/ReleaseGrab.js","nystrum/Actions/GrabDirection.js","nystrum/Keymap/KeyActions/activateGrab.js","nystrum/Characters/RockLee.js","nystrum/Keymap/KeyActions/none.js","nystrum/Keymap/KeyActions/removeWeights.js","nystrum/Keymap/KeyActions/leafWhirlwind.js","nystrum/Keymap/KeyActions/openInnerGate.js","nystrum/Keymap/KeyActions/pickupRandom.js","nystrum/Keymap/KeyActions/addActor.js","nystrum/Actions/PlaceItems.js","nystrum/Actions/PlaceItem.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/SandWall.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveTargetingCursor.js","nystrum/Actions/PrepareSubstitution.js","nystrum/Actions/SandPulse.js","nystrum/StatusEffects/SandSkin.js","nystrum/StatusEffects/Base.js","nystrum/Actions/AddSandSkinStatusEffect.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/OpenEquipment.js","nystrum/Actions/OpenDropInventory.js","nystrum/Actions/PickupRandomItem.js","nystrum/Characters/Gaara.js","nystrum/Characters/FireFighter.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomInt","ceil","coordsToString","coords","x","y","calculatePath","game","targetPos","currentPos","topology","map","isPassable","tile","tileKey","type","passable","astar","ROT","AStar","path","compute","push","slice","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","round","cos","PI","sin","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","gaara","rock_lee","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","N","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","verticalLine","x_offset","y_offset","positions","taken","smallSquare","square","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ALPHABET","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","pos","direction","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","start","Parent","superclass","children","CrankEngine","concat","isInitialized","child","entities","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rect","Konva","Rect","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","strokeEnabled","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","animationLayer","add","opacity","Display","containerId","tilesWide","getTilesWide","tilesHigh","getTilesHigh","stage","layer","animations","animationLoop","document","d","getElementById","displayContainer","createElement","appendChild","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","anim","Group","Text","fontSize","fontFamily","align","verticalAlign","batchDraw","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","slot","addMessage","decreaseDurability","Equipable","equipmentType","Acting","actions","speed","action","Rendering","currentFrame","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","index","findIndex","createSlot","it","splice","window","PUBLIC_URL","fire_0","Howl","src","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","SOUNDS","play","addParticle","Move","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","Destructable","durability","defense","onDestroy","getDefense","current","newDurability","Burnable","canBurn","willResetCanBurn","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","UI_Actor","pipe","initiatedBy","Speaker","messages","saved","Wall","Debris","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","structure","reduce","acc","curr","position","enflame","explode","MovingWall","Bandit","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","Player","presentingUI","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","newAnimation","addAnimation","addAnimations","distance","newPositons","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","itemName","slotName","find","foundSlot","currentGate","gates","damageBuff","speedBuff","durabilityDebuff","nextGate","nextGateIndex","gate","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","arg","attribute","Weapon","Armor","DirectionalProjectile","setActorToPrevious","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","newTile","tileExists","Boolean","notBurnt","step","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","getAction","result","perform","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","Mode","data","infoBlocks","progressBars","merge","TYPE","directionalKunai","sword","axe","waterGun","fireJacket","addTileZone","origin","mapHeight","mapWidth","j","generate","unitCount","unitSize","floorPlan","createFloorPlan","unit","createRoomInFloorPlan","unitPosition","getUnitPosition","didCreate","createUnit","removeInnerWalls","addInnerWalls","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","pos_two","pos_one","getNeighboringPoints","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","neighbors","size","border","unitCollidesWithEdge","newPosition","coordArray","point","t","count","corners","wallCount","corner","wallNeighbors","selectedWallPos","build","currentPosition","previousFloorPositions","prevPos","Flume","infoHeader","level","highestLevel","fireIntensity","npcCount","debrisCount","mediumDebrisCount","heavyDebrisCount","smallGasCanCount","mediumGasCanCount","largeGasCanCount","turnCount","createEmptyLevel","initializeMapTiles","generateBuilding","MapHelper","placeInitialItems","placePlayersInSafeZone","posXY","coord","addDebris","mediumCanCount","addFire","addNPC","updateUI","playing","getSaveCountRequirement","propogateFire","burnEntities","checkRemoveSafeFloors","hasLost","reset","initializeGameData","hasWon","nextLevel","increaseIntensity","createOrUpdateInfoBlock","countNpcSafe","setLevel","resetIntensity","toWin","gasCanCount","minimum","toLose","box","ent","burn","resetCanBurn","objects","Item","pop","players","player","require","Castle","creatureCount","setWaveData","padding","floorTiles","groundTiles","addEnemy","beginNextWave","banditLevels","entityClass","banditStats","getBanditStats","Chunin","dataByLevel","enemies","enemyName","getPlayers","currentBlips","maxBlips","arr","join","levelComplete","nextLevelData","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","randomlyPlaceAllActorsOnMap","tiles","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","props","className","onClick","setActiveScreen","toggleSpriteMode","React","Component","Button","Information","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","Level","ENGINE","selectedMode","class","state","activeTab","createRef","newGameState","setState","ref","onKeyDown","tabIndex","CharacterSelect","characters","top","setSelectedCharacter","Title","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","Lose","Win","ModeSelect","modes","setSelectedMode","DropItem","removeFromContainer","addAlphabeticallyToKeymap","obj","alphabetAllowed","letter","deactivateUIKeymap","visibleUIKey","currentUiActor","removeActor","createFourDirectionMoveOptions","moveFunction","w","activate","s","createEightDirectionMoveOptions","z","q","activateDropItem","visibleInventory","ui","addActorAsPrevious","Escape","keymapDropFromInventory","UnequipItemToTile","unequip","activateEquipment","visibleEquipment","keymapEquipment","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","equip","activateInventory","keymapEquipFromInventory","keymapCursorToThrowItem","initialKeymap","kunai","contains","throwDirectionalKunai","SprayWater","hasItemNameEquipped","ITEM_TYPES","CursorMove","initiatedFrom","cursorCanOccupyPosition","moveCursor","newX","newY","previousKeymap","goToPreviousKeymap","cursor","trigger","walk","CloneSelf","createClone","PickupItem","EquipItemFromTile","MoveMultiple","stepCount","MoveSubstitution","spawnedEntity","Tackle","additionalAttackDamage","keymapFlyingLotus","flyingLotus","AddStatusEffect","addStatusEffect","drunkWalk","originalDirection","MultiTargetAttack","targetPositions","particlePath","particlePos","attackSuccess","chop","keyMapChop","ChakraResource","ReleaseGrab","releasedEntity","release","GrabDirection","grab","keymapCursorToGrabEntity","grabDirection","Keymap","l","k","speedBoost","damageDebuff","h","ENERGY_THRESHOLD","g","setNextGate","nextGateToLabel","getNextGate","o","u","p","kunais","swords","PlaceItems","GoToPreviousKeymap","SandWall","getTargetPositions","directionString","getDirectionKey","PrepareSandWall","sandWallEnergyCost","sandWallRequiredResources","setKeymap","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","MoveTargetingCursor","getPosition","moveCursorInDirection","createSandWall","PrepareSubstitution","activateCursor","deactivateCursor","SandPulse","parameters","SandSkin","defenseBuff","AddSandSkinStatusEffect","OpenInventory","OpenEquipment","OpenDropInventory","PickupRandomItem","Characters","Gaara","RockLee","FireFighter","Nystrum","characterKey","selected","Modes","activeScreen","characterScreen","Screen","modeScreen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15064ab1.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4) => {\n  let map = game.map\n  let isPassable = function (x, y) {\n    const tile = map[x + \",\" + y];\n    if (tile) {\n      return (game.tileKey[tile.type].passable);\n    } else {\n      return false\n    }\n  }\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassable, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter)) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    let rect = new Konva.Rect({\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.05 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tilesWide = this.getTilesWide(width, tileOffset, tileWidth);\n    this.tilesHigh = this.getTilesHigh(height, tileOffset, tileHeight);\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n\n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n    \n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: 24,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nconsole.log(window.PUBLIC_URL);\n\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n      // this.actor.energy -= this.energyCost;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { Move } from '../Actions/Move';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = path.length > 0 ? path[0] : this.pos;\n    let result = new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.renderer.character = this.durability;\n    this.game.draw();\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n  }\n  destroy() {\n    this.onDestroy();\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport { Attacking } from './Attacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  HasInnerGates,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions: Array(this.explosivity).fill('').reduce((acc, curr, i) => {\n        return acc.concat(...Helper.getPointsOnCircumference(0, 0, i + 1));\n      }, [])\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile)\n        tile.type = 'BURNT';\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.enflame();\n    this.explode();\n    super.destroy();\n  }\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper';\nimport { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      positions.forEach((position) => {\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_TILE, \n        {\n          x: position.x, \n          y: position.y, \n          color: THEMES.SOLARIZED.base3 \n        })\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","export const HasInnerGates = superclass => class extends superclass {\n  constructor({ currentGate = null, gates = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_INNER_GATES');\n    this.currentGate = currentGate;\n    this.gates = [\n      {\n        name: 'Gate of Opening',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '1'\n      },\n      {\n        name: 'Gate of Healing',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '2'\n      },\n      {\n        name: 'Gate of Life',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '3'\n      },\n      {\n        name: 'Gate of Pain',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '4'\n      },\n      {\n        name: 'Gate of Limit',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '5'\n      },\n    ];\n  }\n  setNextGate() {\n    let currentGate = this.currentGate;\n    let nextGate = null;\n    if (!currentGate) {\n      nextGate = this.gates[0];\n      this.currentGate = { ...nextGate };\n    }\n    else {\n      let nextGateIndex = this.gates.findIndex((gate) => currentGate.name === gate.name) + 1;\n      if (this.gates.length > nextGateIndex) {\n        nextGate = this.gates[nextGateIndex];\n        this.currentGate = { ...nextGate };\n      }\n    }\n    return nextGate;\n  }\n  getNextGate() {\n    let currentGate = this.currentGate;\n    let nextGate = null;\n    if (!currentGate) {\n      nextGate = this.gates[0];\n    }\n    else {\n      let nextGateIndex = this.gates.findIndex((gate) => currentGate.name === gate.name) + 1;\n      if (this.gates.length > nextGateIndex) {\n        nextGate = this.gates[nextGateIndex];\n      }\n    }\n    return nextGate;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = ['WALL', 'FLOOR', 'DOOR'].includes(newTile.type);\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        console.log('timePassed');\n        console.log(timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        let currentFrame = 0;\n\n        if (Constant.TILE_KEY[type].animation) {\n          currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n        }\n\n        map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n}","import * as Helper from '../../helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n  \n  removeInnerWalls(map)\n  addInnerWalls(map, floorPlan.length)\n  return data;\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  let unitCollidesWithEdge = false;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) unitCollidesWithEdge = true;\n    }\n  }\n\n  if (!unitCollidesWithEdge) {\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const newPosition = {\n          x: position.x + i,\n          y: position.y + j,\n        }\n        let type = 'FLOOR';\n        if (i === 0 || i === (length - 1)) type = 'WALL';\n        if (j === 0 || j === (length - 1)) type = 'WALL';\n        let tile = map[Helper.coordsToString(newPosition)];\n        if (tile) tile.type = type;\n      }\n    }\n  }\n\n  return !unitCollidesWithEdge;\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return map[key].type === 'WALL';\n  })\n\n  let innerWalls = walls.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL', 'FLOOR'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (tile.type !== 'WALL') return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n        \n      } else if (tile.type === 'GROUND' || (tile.type === 'WALL' && previousFloorPositions.length)) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport * as Item from '../items';\nimport * as MapHelper from '../Maps/helper';\nimport { generate as generateBuilding } from '../Maps/generator';\nimport { FireSpread, Speaker, Debris } from '../Entities/index';\nimport { MESSAGE_TYPE } from '../message';\nimport { Mode } from './default';\nimport SOUNDS from '../sounds';\n\nexport class Flume extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.infoHeader = 'Save all of the citizens from the burning keep and get them to the safe zone!'\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      fireIntensity: 1, // increase this number to increase fire spread\n      npcCount: 1,\n      debrisCount: 4,\n      mediumDebrisCount: 3,\n      heavyDebrisCount: 4,\n      smallGasCanCount: 3,\n      mediumGasCanCount: 0,\n      largeGasCanCount: 1,\n      turnCount: 0,\n    };\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    const offsetX = Math.floor(this.game.mapWidth / 2)\n    const offsetY = Math.floor(this.game.mapHeight / 2)\n    generateBuilding(this.game.map, offsetX, offsetY);\n    MapHelper.addTileZone(\n      { x: 0, y: 0 },\n      3,\n      3,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    this.placeInitialItems();\n    this.placePlayersInSafeZone();\n\n    let array = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n    for (let index = 0; index < this.data.debrisCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] });\n    }\n    for (let index = 0; index < this.data.mediumDebrisCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'Medium Sized Debris', 'm', 10, 0);\n    }\n    for (let index = 0; index < this.data.heavyDebrisCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'Heavy Sized Debris', 'H', 10, 0, false, false);\n    }\n    for (let index = 0; index < this.data.smallGasCanCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'gas can', 'Xs', 1, 1, true, true, Constant.THEMES.SOLARIZED.orange);\n    }\n    for (let index = 0; index < this.data.mediumCanCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'gas can', 'X', 1, 3, true, true, Constant.THEMES.SOLARIZED.orange);\n    }\n    for (let index = 0; index < this.data.largeGasCanCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'gas can', 'XL', 1, 10, true, true, Constant.THEMES.SOLARIZED.orange);\n    }\n    for (let index = 0; index < this.data.fireIntensity; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addFire({ x: posXY[0], y: posXY[1] });\n    }\n    for (let index = 0; index < this.data.npcCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addNPC({ x: posXY[0], y: posXY[1] });\n    }\n\n    // ui\n    this.updateUI()\n\n    // sounds\n    if (!SOUNDS.fire_1.playing()) SOUNDS.fire_1.play();    \n  }\n\n  checkRemoveSafeFloors () {\n    const currentActor = this.game.engine.actors[this.game.engine.currentActor];\n    if (currentActor.name !== Constant.PLAYER_NAME) return;\n\n    this.data.turnCount += 1;\n    if (this.data.turnCount > this.getSaveCountRequirement() * 50) {\n      Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE_FLOOR').forEach((key) => {\n        this.game.map[key].type = 'FLOOR';\n      });\n\n    }\n  }\n\n  update () {\n    super.update();\n    this.propogateFire();\n    this.burnEntities();\n    this.checkRemoveSafeFloors();\n    this.updateUI()\n    if (this.hasLost()) {\n      this.reset();\n      this.game.initializeGameData();\n    }\n    // triggerd once all npcs are saved\n    if (this.hasWon()) {\n      this.nextLevel();\n      this.increaseIntensity()\n      this.game.initializeGameData();\n    }\n  }\n\n  updateUI () {\n    this.createOrUpdateInfoBlock('levelProgress', { text: `${this.countNpcSafe()} of  ${this.getSaveCountRequirement()} are safe!` })\n  }\n  \n  //Extras\n\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.resetIntensity();\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  increaseIntensity () {\n    switch (this.data.level) {\n\n      case 2:\n        this.data.fireIntensity = 2;\n        this.data.npcCount = 1;\n        this.data.debrisCount = 4;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 1;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 3:\n        this.data.fireIntensity = 3;\n        this.data.npcCount = 2;\n        this.data.debrisCount = 50;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 1;\n        this.data.mediumGasCanCount = 2;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 4:\n        this.data.fireIntensity = 4;\n        this.data.npcCount = 2;\n        this.data.debrisCount = 6;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 3;\n        this.data.mediumGasCanCount = 2;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 5:\n        this.data.fireIntensity = 5;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 6;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 3;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 6:\n        this.data.fireIntensity = 4;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 10;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 3;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 7:\n        this.data.fireIntensity = 1;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 80;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 25;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 8:\n        this.data.fireIntensity = 3;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 20;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 6;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 9:\n        this.game.toWin();\n        break;\n      default:\n        this.data.fireIntensity = 3;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 20;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.gasCanCount = 5;\n        break;\n    }\n  }\n\n  resetIntensity () {\n    this.data.fireIntensity = 1;\n    this.data.npcCount = 1;\n    this.data.debrisCount = 4;\n  }\n\n  countNpcSafe () {\n    const helpless = this.game.engine.actors.filter((actor) => {\n      if (actor.entityTypes.includes('HELPLESS')) {\n        const tile = this.game.map[Helper.coordsToString(actor.pos)];\n        if (tile.type === 'SAFE') {\n          if (!actor.saved) actor.save();\n          return true;\n        }\n      }\n      return false\n    });\n\n    return helpless.length;\n  }\n\n  getSaveCountRequirement () {\n    const minimum = Math.ceil(this.data.npcCount * 0.66);\n    return Math.max(1, minimum);\n  }\n\n  hasWon () {\n    return this.countNpcSafe() >= this.getSaveCountRequirement();\n  }\n\n  hasLost () {\n    const helpless = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('HELPLESS'));\n    if (helpless.length < this.getSaveCountRequirement()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      return true;\n    }\n    return false;\n  }\n\n  addDebris (pos, name = 'box', character = '%', durability = 5, explosivity = 0, pushable = true, draggable = true, background = Constant.THEMES.SOLARIZED.base01) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new Debris({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: Constant.THEMES.SOLARIZED.base2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      explosivity,\n      flammability: 0,\n      draggable,\n      pushable,\n    })\n\n    this.game.placeActorOnMap(box)\n    this.game.draw();\n  }\n\n  addNPC (pos) {\n    // create new entity and place\n    let entity = new Speaker({\n      name: Constant.NPC_NAME,\n      // messages: SOLANGE.lyrics,\n      messages: ['help!', 'ahh!', 'It\\'s getting hot in hurr.'],\n      messageType: MESSAGE_TYPE.ACTION,\n      pos,\n      game: this.game,\n      renderer: {\n        character: 'C',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.violet,\n      },\n      durability: 2,\n    })\n\n    if (this.game.placeActorOnMap(entity)) {\n      const tile = this.game.map[Helper.coordsToString(entity.pos)];\n      tile.type = 'SAFE_FLOOR';\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  addFire (pos) {\n    // create new fire actor and place\n    let fire = new FireSpread({\n      name: 'Pyro',\n      pos,\n      game: this.game,\n      renderer: {\n        character: '*',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.red,\n      },\n      timeToSpread: 1,\n      spreadCount: 1,\n      durability: 1,\n      attackDamage: 2,\n      speed: 100,\n    })\n\n    if (this.game.placeActorOnMap(fire)) {\n      this.game.engine.addActor(fire);\n      this.game.draw();\n    };\n  }\n\n  propogateFire () {\n    const fires = this.game.engine.actors.filter((actor) => actor.name === 'Pyro')\n    if (fires.length < this.data.fireIntensity) {\n      // find burnt tile\n      const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'BURNT');\n      const key = Helper.getRandomInArray(keys);\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        this.addFire(position)\n      }\n    }\n  }\n\n  burnEntities () {\n    // burn all entiies on burning tiles\n    const coordinates = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'BURNT');\n    const entities = coordinates.reduce((acc, curr) => acc.concat(this.game.map[curr].entities), []);\n    entities.forEach((ent) => {\n      if (ent.entityTypes.includes('BURNABLE')) {\n        const burned = ent.burn();\n        if (burned) this.game.addMessage(`${ent.name} is burned.`, MESSAGE_TYPE.DANGER);\n        if (ent.willResetCanBurn) ent.resetCanBurn();\n      }\n    })\n  }\n\n  placeInitialItems () {\n    let objects = [\n      Item.axe(this.game.engine),\n      Item.waterGun(this.game.engine),\n      Item.fireJacket(this.game.engine),\n    ];\n\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n\n    objects.forEach((item) => {\n      const key = keys.pop();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        item.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(item);\n        }\n      }\n    })\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import { Mode } from './default'\nimport { Flume } from './flume'\nimport { Castle } from './castle'\nimport { Chunin } from './chunin'\n\nexport default {\n  Mode,\n  Flume,\n  Castle,\n  Chunin,\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport * as Item from '../items';\nimport * as MapHelper from '../Maps/helper';\nimport { generate as generateBuilding } from '../Maps/generator';\nimport { FireSpread, Speaker, Debris, Bandit, RangedBandit } from '../Entities/index';\nimport { MESSAGE_TYPE } from '../message';\nimport { Mode } from './default';\nimport SOUNDS from '../sounds';\nimport Konva from 'konva';\n\nconst MAP_DATA = require('../Maps/castle.json');\n\nexport class Castle extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      fireIntensity: 0, // increase this number to increase fire spread\n      npcCount: 1,\n      creatureCount: 1,\n      turnCount: 0,\n    };\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    // this.game.createCustomLevel(MAP_DATA);\n    \n    this.setWaveData(this.data.level);\n    const offsetX = Math.floor(this.game.mapWidth / 2)\n    const offsetY = Math.floor(this.game.mapHeight / 2)\n    // generateBuilding(this.game.map, 2, 2, 1, 18);\n    // generateBuilding(this.game.map, 10, 10, 2, 4);\n    // generateBuilding(this.game.map, offsetX, offsetY, 2, 4);\n    let padding = 3;\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'WALL',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    padding = 4\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'FLOOR',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    padding = 5;\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'WALL',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    padding = 6\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n\n    MapHelper.addTileZone(\n      { x: 31, y: 9 },\n      4,\n      4,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    generateBuilding(this.game.map, 10, 10, 2, 4);\n\n\n    this.placeInitialItems();\n    this.placePlayersInSafeZone();\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n    for (let index = 0; index < this.data.npcCount; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addNPC({ x: posXY[0], y: posXY[1] });\n    }\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n    for (let index = 0; index < this.data.creatureCount; index++) {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEnemy({ x: posXY[0], y: posXY[1] });\n    }\n  }\n\n  update () {\n    super.update();\n    this.propogateFire();\n    this.burnEntities();\n    if (this.hasLost()) {\n      this.reset();\n      this.game.initializeGameData();\n    }\n    // triggerd once all npcs are saved\n    if (this.hasWon()) {\n      this.nextLevel();\n      this.beginNextWave();\n      this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData (level) {\n    switch (level) {\n      case 1:\n        this.data.creatureCount = 0;\n        this.data.npcCount = 1;\n        break;\n      case 2:\n        this.data.creatureCount = 5;\n        this.data.npcCount = 1;\n        break;\n      case 3:\n        this.data.creatureCount = 10;\n        this.data.npcCount = 1;\n        break;\n      default:\n        this.data.creatureCount = 20;\n        this.data.npcCount = 1;\n        break;\n    }\n  }\n\n  countNpcSafe () {\n    const helpless = this.game.engine.actors.filter((actor) => {\n      if (actor.entityTypes.includes('HELPLESS')) {\n        const tile = this.game.map[Helper.coordsToString(actor.pos)];\n        if (tile.type === 'SAFE') {\n          if (!actor.saved) actor.save();\n          return true;\n        }\n      }\n      return false\n    });\n\n    return helpless.length;\n  }\n\n  getSaveCountRequirement () {\n    const minimum = Math.ceil(this.data.npcCount * 0.66);\n    return Math.max(1, minimum);\n  }\n\n  hasWon () {\n    return this.countNpcSafe() >= this.getSaveCountRequirement();\n  }\n\n  hasLost () {\n    const helpless = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('HELPLESS'));\n    if (helpless.length < this.getSaveCountRequirement()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      return true;\n    }\n    return false;\n  }\n\n  addDebris (pos, name = 'box', character = '%', durability = 5, explosivity = 0, pushable = true, draggable = true, background = Constant.THEMES.SOLARIZED.base01) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new Debris({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: Constant.THEMES.SOLARIZED.base2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      explosivity,\n      flammability: 0,\n      draggable,\n      pushable,\n    })\n\n    this.game.placeActorOnMap(box)\n    // this.game.draw();\n  }\n\n  addNPC (pos) {\n    // create new entity and place\n    let entity = new Speaker({\n      name: Constant.NPC_NAME,\n      // messages: SOLANGE.lyrics,\n      messages: ['help!', 'ahh!', 'It\\'s getting hot in hurr.'],\n      messageType: MESSAGE_TYPE.ACTION,\n      pos,\n      game: this.game,\n      renderer: {\n        character: 'C',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.violet,\n      },\n      durability: 2,\n    })\n\n    if (this.game.placeActorOnMap(entity)) {\n      const tile = this.game.map[Helper.coordsToString(entity.pos)];\n      tile.type = 'SAFE_FLOOR';\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  addFire (pos) {\n    // create new fire actor and place\n    let fire = new FireSpread({\n      name: 'Pyro',\n      pos,\n      game: this.game,\n      renderer: {\n        character: '*',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.red,\n      },\n      timeToSpread: 1,\n      spreadCount: 1,\n      durability: 1,\n      attackDamage: 2,\n      speed: 100,\n    })\n\n    if (this.game.placeActorOnMap(fire)) {\n      this.game.engine.addActor(fire);\n      // this.game.draw();\n    };\n  }\n\n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Slingshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Buckshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 200,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Ross',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Kevin',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jacob',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#67a1d7',\n          background: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jarod',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#e16264',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 5,\n        speed: 300,\n        entityClass: Bandit\n      },\n      {\n        name: 'Bigii',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#9f62e1',\n          background: '',\n        },\n        durability: 15,\n        attackDamage: 10,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addEnemy (pos) {\n    let players = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  propogateFire () {\n    const fires = this.game.engine.actors.filter((actor) => actor.name === 'Pyro')\n    if (fires.length < this.data.fireIntensity) {\n      // find burnt tile\n      const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'BURNT');\n      const key = Helper.getRandomInArray(keys);\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        this.addFire(position)\n      }\n    }\n  }\n\n  burnEntities () {\n    // burn all entiies on burning tiles\n    const coordinates = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'BURNT');\n    const entities = coordinates.reduce((acc, curr) => acc.concat(this.game.map[curr].entities), []);\n    entities.forEach((ent) => {\n      if (ent.entityTypes.includes('BURNABLE')) {\n        const burned = ent.burn();\n        if (burned) this.game.addMessage(`${ent.name} is burned.`, MESSAGE_TYPE.DANGER);\n        if (ent.willResetCanBurn) ent.resetCanBurn();\n      }\n    })\n  }\n\n  placeInitialItems () {\n    let objects = [\n      Item.axe(this.game.engine),\n      Item.waterGun(this.game.engine),\n      Item.fireJacket(this.game.engine),\n    ];\n\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n\n    objects.forEach((item) => {\n      const key = keys.pop();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        item.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(item);\n        }\n      }\n    })\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport * as Item from '../items';\nimport * as MapHelper from '../Maps/helper';\nimport { generate as generateBuilding } from '../Maps/generator';\nimport { Debris, Bandit, RangedBandit } from '../Entities/index';\nimport { MESSAGE_TYPE } from '../message';\nimport { Mode } from './default';\nimport SOUNDS from '../sounds';\nimport * as _ from 'lodash';\n\nexport class Chunin extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(1).fill('Bandit'),\n      },\n      // {\n      //   enemies: Array(10).fill('Bandit'),\n      // },\n    ]\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    \n    this.setWaveData();\n    MapHelper.addTileZone(\n      { x: 31, y: 9 },\n      4,\n      4,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    generateBuilding(this.game.map, 10, 10, 2, 4);\n    generateBuilding(this.game.map, 20, 5, 6, 4);\n\n    this.placePlayersInSafeZone();\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this[`add${enemyName}`]({ x: posXY[0], y: posXY[1] });\n    })\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    _.each(this.getPlayers(), (player, index) => {\n      const currentBlips = Math.floor(player.energy / 100);\n      const maxBlips = Math.floor(player.speed / 100);\n      const arr = [\n        ...Array(currentBlips).fill(''),\n        ...Array(maxBlips - currentBlips).fill('_'),\n      ];\n      this.createOrUpdateInfoBlock(`playerSpeed${player.id}`, { text: `${player.name} | AP: ${arr.join(' ')}` })\n      // this.createOrUpdateInfoBlock(`playerSpeed`, { text: `AP: ${player.energy}/${player.speed}` })\n    })\n  }\n\n  update () {\n    super.update();\n    // this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n      this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    return this.game.engine.actors.length === 1; \n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addDebris (pos, name = 'box', character = '%', durability = 5, explosivity = 0, pushable = true, draggable = true, background = Constant.THEMES.SOLARIZED.base01) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new Debris({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: Constant.THEMES.SOLARIZED.base2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      explosivity,\n      flammability: 0,\n      draggable,\n      pushable,\n    })\n\n    this.game.placeActorOnMap(box)\n    // this.game.draw();\n  }\n\n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Slingshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Buckshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 200,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Ross',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Kevin',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jacob',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#67a1d7',\n          background: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jarod',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#e16264',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 5,\n        speed: 300,\n        entityClass: Bandit\n      },\n      {\n        name: 'Bigii',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#9f62e1',\n          background: '',\n        },\n        durability: 15,\n        attackDamage: 10,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addBandit (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as _ from 'lodash';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 60;\nconst MAP_HEIGHT = 25;\n// const MAP_WIDTH = 100;\n// const MAP_HEIGHT = 100;\nconst TILE_WIDTH = 30;\nconst TILE_HEIGHT = 30;\nconst TILE_OFFSET = 0;\n// const canvasWidth = (50 * TILE_WIDTH) + TILE_OFFSET;\n// const canvasHeight = (25 * TILE_HEIGHT) + TILE_OFFSET;\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      let currentFrame = 0;\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n\n      if (Constant.TILE_KEY[type].animation) {\n        currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n      }\n\n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n    this.randomlyPlaceAllActorsOnMap()\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        let type = 'GROUND';\n        let currentFrame = 0;\n\n        if (Constant.TILE_KEY[type].animation) {\n          currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n        }\n\n        this.map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      let currentFrame = 0;\n      if (!type) {\n        type = 'GROUND';\n      }\n\n      if (Constant.TILE_KEY[type].animation) {\n        currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n      }\n\n    \n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n    })\n\n    // this.placeInitialEntities();\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getPlayerPosition () {\n    const players = this.getPlayers();\n    if (players.length) return players[0].pos\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 100)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 100)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      console.log(code);\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start()\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          {\n            _.map(infoBlocks, (value, key) => {\n              return (\n                <div key={key} className='Instructions__block'>\n                  {value.text}\n                </div>\n              )\n            })\n          }\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${resource.renderer.character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Chakara Points'\n          attributePath='charge'\n          attributePathMax='chargeMax'\n          colorFilled='#13b8d7'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Equipment extends React.Component {\n  render() {\n    return (\n      <div className=\"Equipment UI\">\n        {\n          this.props.equipment && (\n            <div>\n              <div className='flow-text'>Equipment</div>\n              <div>\n                {\n                  this.props.equipment.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {slot.name} {slot.item ? slot.item.renderer.character : ''}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Equipment from '../UI/Equipment';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => this.props.setActiveScreen(SCREENS.LOSE);\n    this.state.game['toWin'] = () => this.props.setActiveScreen(SCREENS.WIN);\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s12'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <PlayerInformation game={this.state.game} />\n            <Information game={this.state.game} />\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n            {/* <Messages messages={this.state.game.messages.slice(-5).reverse()} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <button\n            style={{\n              position: 'relative',\n              top: '280px'\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.MODE_SELECT)\n            }}\n          >\n            Play\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport CharacterSelect from '../UI/CharacterSelect';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n            // backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            // backgroundColor: '#eee',\n            backgroundColor: 'rgb(54,160,190)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class DropItem extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} drops ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.removeFromContainer(this.item);\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities.push(this.item);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { ALPHABET, DIRECTIONS } from '../constants';\n\nexport const createKeyAction = ({\n  label = 'KeyAction',\n  activate = () => null,\n  action = null,\n}) => {\n  return {\n    label,\n    activate,\n    action,\n  }\n}\n\nexport const addAlphabeticallyToKeymap = (keymap, obj) => {\n  let alphabetAllowed = ALPHABET.filter((letter) => {\n    return !Object.keys(keymap).includes(letter);\n  });\n  keymap[alphabetAllowed[0]] = obj;\n}\n\nexport const deactivateUIKeymap = (engine, visibleUIKey) => {\n  let currentUiActor = engine.actors[engine.currentActor];\n  engine.game.removeActor(currentUiActor);\n  engine.game[visibleUIKey] = null;\n}\n\nexport const createFourDirectionMoveOptions = (moveFunction, engine, label = 'move', hidden = false) => {\n  return {\n    w: {\n      activate: () => moveFunction(DIRECTIONS.N, engine),\n      label: `${label} N`,\n      hidden,\n    },\n    d: {\n      activate: () => moveFunction(DIRECTIONS.E, engine),\n      label: `${label} E`,\n      hidden,\n    },\n    s: {\n      activate: () => moveFunction(DIRECTIONS.S, engine),\n      label: `${label} S`,\n      hidden,\n    },\n    a: {\n      activate: () => moveFunction(DIRECTIONS.W, engine),\n      label: `${label} W`,\n      hidden,\n    },\n  }\n}\n\nexport const createEightDirectionMoveOptions = (moveFunction, engine, label = 'move', hidden = false) => {\n  return {\n    w: {\n      activate: () => moveFunction(DIRECTIONS.N, engine),\n      label: `${label} N`,\n      hidden,\n    },\n    e: {\n      activate: () => moveFunction(DIRECTIONS.NE, engine),\n      label: `${label} NE`,\n      hidden,\n    },\n    d: {\n      activate: () => moveFunction(DIRECTIONS.E, engine),\n      label: `${label} E`,\n      hidden,\n    },\n    c: {\n      activate: () => moveFunction(DIRECTIONS.SE, engine),\n      label: `${label} SE`,\n      hidden,\n    },\n    x: {\n      activate: () => moveFunction(DIRECTIONS.S, engine),\n      label: `${label} S`,\n      hidden,\n    },\n    z: {\n      activate: () => moveFunction(DIRECTIONS.SW, engine),\n      label: `${label} SW`,\n      hidden,\n    },\n    a: {\n      activate: () => moveFunction(DIRECTIONS.W, engine),\n      label: `${label} W`,\n      hidden,\n    },\n    q: {\n      activate: () => moveFunction(DIRECTIONS.NW, engine),\n      label: `${label} NW`,\n      hidden,\n    },\n  }\n}","import * as Constant from '../../constants';\nimport { UI_Actor } from '../../Entities/index';\nimport { DropItem } from \"../../Actions/DropItem\";\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapDropFromInventory = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      // g: {\n      activate: () => deactivateUIKeymap(engine, 'visibleInventory'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.container.map((slot, index) => {\n    const item = slot.items[0];\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      console.log(`setting action for ${initiatedBy.name} to drop ${item.name}`);\n      initiatedBy.setNextAction(new DropItem({\n        item,\n        game: engine.game,\n        actor: initiatedBy,\n        energyCost: Constant.ENERGY_THRESHOLD\n      }));\n      deactivateUIKeymap(engine, 'visibleInventory');\n    }\n    obj['label'] = `Drop ${item.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateDropItem = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleInventory = currentActor.container;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'D',\n      color: 'white',\n      background: '',\n    },\n    name: 'Drop',\n    game: engine.game,\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapDropFromInventory(engine, currentActor);\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class UnequipItemToTile extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} drops ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.unequip(this.item);\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities.splice(0, 0, this.item);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { UnequipItemToTile } from \"../../Actions/UnequipItemToTile\";\nimport { UnequipItem } from \"../../Actions/UnequipItem\";\nimport { UI_Actor } from '../../Entities/index';\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapEquipment = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      activate: () => deactivateUIKeymap(engine, 'visibleEquipment'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.equipment.filter((slot) => slot.item).map((slot) => {\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      initiatedBy.setNextAction(new UnequipItemToTile({\n        item: slot.item,\n        game: engine.game,\n        actor: initiatedBy,\n      }))\n      deactivateUIKeymap(engine, 'visibleEquipment');\n    }\n    obj['label'] = `Unequip ${slot.item.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateEquipment = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleEquipment = currentActor.equipment;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'E',\n      color: 'white',\n      background: '',\n    },\n    name: 'Equipment',\n    game: engine.game,\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapEquipment(engine, currentActor);\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { UI_Actor } from '../../Entities/index';\nimport { EquipItemFromContainer } from \"../../Actions/EquipItemFromContainer\";\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapEquipFromInventory = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      activate: () => deactivateUIKeymap(engine, 'visibleInventory'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.container.map((slot, index) => {\n    const item = slot.items[0];\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      console.log(`setting action for ${initiatedBy.name} to equip ${item.name}`);\n      initiatedBy.setNextAction(new EquipItemFromContainer({\n        item,\n        game: engine.game,\n        actor: initiatedBy,\n      }))\n      deactivateUIKeymap(engine, 'visibleInventory');\n    }\n    obj['label'] = `Equip ${item.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateInventory = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleInventory = currentActor.container;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'I',\n      color: 'white',\n      background: '',\n    },\n    name: 'Inventory',\n    game: engine.game,\n    // keymap: keymapEquipFromInventory(engine, currentActor),\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapEquipFromInventory(engine, currentActor);\n}","import { PlaceActor } from \"../../Actions/PlaceActor\";\nimport * as Constant from '../../constants';\nimport * as Item from '../../items';\nimport { createEightDirectionMoveOptions } from '../helper';\n\nconst throwDirectionalKunai = (direction, engine, actor) => {\n  let kunai = actor.contains(Item.TYPE.DIRECTIONAL_KUNAI);\n  if (kunai) {\n    kunai.game = engine.game;\n    kunai.pos = {\n      x: actor.pos.x,\n      y: actor.pos.y,\n    };\n    kunai.direction = direction;\n    actor.removeFromContainer(kunai);\n    actor.setNextAction(\n      new PlaceActor({\n        targetPos: { ...kunai.pos },\n        entity: kunai,\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    )\n\n  } else {\n    console.log('I have no kunais left');\n  }\n}\n\nconst keymapCursorToThrowItem = (engine, initiatedBy, initialKeymap) => {\n  return {\n    ...createEightDirectionMoveOptions(\n      (direction, engine) => {\n        throwDirectionalKunai(direction, engine, initiatedBy);\n        initiatedBy.keymap = initialKeymap;\n      },\n      engine,\n      'throw',\n    )\n  }\n}\n\nexport const activateThrow = (engine) => {\n  let game = engine.game;\n  let currentActor = engine.actors[game.engine.currentActor]\n  let initialKeymap = currentActor.keymap;\n  currentActor.keymap = keymapCursorToThrowItem(engine, currentActor, initialKeymap);\n}","import { MESSAGE_TYPE } from '../message';\nimport { TYPE as ITEM_TYPES } from '../items';\nimport SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class SprayWater extends Base {\n  constructor({ targetPos, radius = 1, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.radius = radius;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.water;\n  }\n  perform() {\n    if (!this.actor.hasItemNameEquipped(ITEM_TYPES.WATER_GUN)) {\n      this.game.addMessage(`${this.actor.name} doesn't have a ${ITEM_TYPES.WATER_GUN}.`, MESSAGE_TYPE.ERROR);\n      return {\n        success: false,\n        alternative: null,\n      };\n    }\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions: Array(this.radius).fill('').reduce((acc, curr, i) => {\n        return acc.concat(...Helper.getPointsOnCircumference(0, 0, i + 1));\n      }, [])\n    };\n    const positions = structure.positions.map((slot) => {\n      return {\n        x: this.targetPos.x + slot.x + structure.x_offset,\n        y: this.targetPos.y + slot.y + structure.y_offset\n      };\n    }).concat({ ...this.targetPos });\n    positions.forEach((position) => {\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        if (tile.type === 'BURNT')\n          tile.type = 'GROUND';\n        if (tile.type === 'FLOOR')\n          tile.type = 'WET';\n      }\n    });\n    // adding particles\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: Math.sign(pos.x - this.targetPos.x),\n        y: Math.sign(pos.y - this.targetPos.y)\n      });\n    });\n    // sounds\n    const sound = Helper.getRandomInArray([SOUNDS.water_0, SOUNDS.water_1]);\n    sound.play();\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class CursorMove extends Base {\n  constructor({ targetPos, processDelay = 0, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const initiatedFrom = this.actor.initiatedBy.pos;\n    const path = Helper.calculatePath(this.game, this.targetPos, initiatedFrom, 8);\n    const isInRange = this.actor.range ? path.length <= this.actor.range : true;\n    if (isInRange && this.game.cursorCanOccupyPosition(this.targetPos)) {\n      let tile = this.game.map[Helper.coordsToString(this.actor.pos)];\n      this.game.map[Helper.coordsToString(this.actor.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.actor.id) };\n      this.actor.pos = this.targetPos;\n      this.game.map[Helper.coordsToString(this.targetPos)].entities.push(this.actor);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { CursorMove } from \"../../Actions/CursorMove\";\n\nexport const moveCursor = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new CursorMove({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: 0,\n  }))\n}","import { SprayWater } from \"../../Actions/SprayWater\";\nimport * as Constant from '../../constants';\nimport { UI_Actor } from '../../Entities/index';\nimport { moveCursor } from './moveCursor';\nimport { createFourDirectionMoveOptions } from '../helper';\n\nconst trigger = (engine, actor, radius = 1) => {\n  let cursor = engine.actors[engine.currentActor];\n\n  actor.setNextAction(\n    // new Action.Say({\n    //   game: engine.game,\n    //   actor,\n    //   message: 'I\\'ll crush you!',\n    //   energyCost: Constant.ENERGY_THRESHOLD\n    // })\n    new SprayWater({\n      targetPos: { ...cursor.pos },\n      radius,\n      game: engine.game,\n      actor,\n      energyCost: Constant.ENERGY_THRESHOLD\n    })\n  )\n}\n\nconst keymap = (engine, initiatedBy, previousKeymap, radius) => {\n  const goToPreviousKeymap = () => {\n    let cursor = engine.actors[engine.currentActor];\n    cursor.active = false;\n    engine.game.removeActor(cursor);\n    // make sure actor is burnable once targeting is complete or canceled\n    initiatedBy['willResetCanBurn'] = true;\n    \n  };\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Close',\n    },\n    ...createFourDirectionMoveOptions(moveCursor, engine),\n    t: {\n      activate: () => {\n        // make sure actor is burnable once targeting is complete or canceled\n        initiatedBy['canBurn'] = true;\n        trigger(engine, initiatedBy, radius);\n        goToPreviousKeymap();\n      },\n      label: 'activate'\n    },\n  };\n}\n\nexport const activateProjectile = (engine, radius, range = 2) => {\n  let currentActor = engine.actors[engine.currentActor]\n  let game = engine.game;\n  let pos = currentActor.pos;\n  // prevent player from being burned while on fire.\n  currentActor['canBurn'] = false;\n\n  let cursor = new UI_Actor({\n    initiatedBy: currentActor,\n    range,\n    pos,\n    renderer: {\n      character: '█',\n      color: 'white',\n      background: '',\n    },\n    name: 'Cursor',\n    game,\n    keymap: keymap(engine, currentActor, { ...currentActor.keymap }, radius),\n  })\n  engine.addActorAsPrevious(cursor);\n  game.placeActorOnMap(cursor)\n  game.draw()\n}","import { Move } from \"../../Actions/Move\";\nimport * as Constant from '../../constants';\n\nexport const walk = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new Move({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: Constant.ENERGY_THRESHOLD\n  }))\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class CloneSelf extends Base {\n  constructor({ cloneArgs = [], ...args }) {\n    super({ ...args });\n    this.cloneArgs = cloneArgs;\n  }\n  perform() {\n    let success = false;\n    if (this.actor.createClone(this.cloneArgs)) {\n      success = true;\n      // this.actor.energy -= this.energyCost;\n      this.game.addMessage(`${this.actor.name} is cloning itself`, MESSAGE_TYPE.ACTION);\n    }\n    // let clone = cloneDeep(this.actor);\n    // clone.game = this.actor.game;\n    // clone.id = uuid();\n    // this.cloneArgs.forEach((arg) => {\n    //   console.log(arg);\n    //   clone[arg.attribute] = arg.value\n    // });\n    // if (this.game.placeActorOnMap(clone)) {\n    //   this.game.engine.addActorAsNext(clone);\n    //   this.game.draw();\n    //   success = true;\n    // };\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PickupItem extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} picks up ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.addToContainer(this.item);\n    let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== this.item.id);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class EquipItemFromTile extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      // if (itemInSlot) {\n      //   this.game.map[Helper.coordsToString(this.actor.pos)].entities.push(itemInSlot);\n      // }\n      if (itemInSlot) {\n        this.game.addMessage(`${this.actor.name}\\'s equipment slots are full.`, MESSAGE_TYPE.ERROR);\n      }\n      else {\n        this.actor.equip(this.item.equipmentType, this.item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== this.item.id);\n        this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n        success = true;\n        this.actor.energy -= this.energyCost;\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Shove } from \"../../Actions/Shove\";\nimport { ENERGY_THRESHOLD } from '../../constants';\n\nexport const push = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new Shove({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    direction,\n    energyCost: ENERGY_THRESHOLD,\n    processDelay: 25,\n  }))\n}","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.energy -= this.energyCost;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\n\nexport class MoveSubstitution extends Base {\n  constructor({ spawnedEntity, targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.spawnedEntity = spawnedEntity;\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let move_success = this.actor.move(this.targetPos);\n    if (move_success) {\n      success = true;\n      this.game.placeActorOnMap(this.spawnedEntity)\n      this.game.draw();\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n};\n","import { MoveMultiple } from './MoveMultiple';\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, stepCount, additionalAttackDamage = 0, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.additionalAttackDamage = additionalAttackDamage;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.shove(targetPos, this.direction)) {\n      this.stepCount -= 1;\n      this.actor.energy -= this.energyCost;\n      this.actor.setNextAction(this);\n      for (let i = 0; i < 3; i++) {\n        this.addParticle(1, {\n          x: this.actor.pos.x - (this.direction[0] * i),\n          y: this.actor.pos.y - (this.direction[1] * i),\n        }, { x: 0, y: 0 });\n      }\n      success = true;\n    }\n    else {\n      success = true;\n      this.actor.attack(targetPos, this.additionalAttackDamage);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Tackle } from \"../../Actions/Tackle\";\nimport { ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../../constants';\nimport { createFourDirectionMoveOptions } from '../helper';\n\nconst flyingLotus = (direction, stepCount, energyCost, additionalAttackDamage, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Tackle({\n    direction,\n    stepCount,\n    game: engine.game,\n    actor,\n    additionalAttackDamage,\n    energyCost,\n    particleTemplate: PARTICLE_TEMPLATES.leaf\n  }))\n}\n\nconst keymapFlyingLotus = (engine, initiatedBy, previousKeymap) => {\n  const energyCost = ENERGY_THRESHOLD;\n  const stepCount = Math.floor(initiatedBy.energy / energyCost) - 1;\n  const additionalAttackDamage = stepCount;\n  const goToPreviousKeymap = () => initiatedBy.keymap = previousKeymap;\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Close',\n    },\n    ...createFourDirectionMoveOptions(\n      (direction, engine) => {\n        flyingLotus(direction, stepCount, energyCost, additionalAttackDamage, engine);\n        goToPreviousKeymap();\n      },\n      engine,\n      'activate',\n    ),\n  };\n}\n\nexport const activateFlyingLotus = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  currentActor.keymap = keymapFlyingLotus(engine, currentActor, { ...currentActor.keymap });\n}","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 0, ...args }) {\n    super({ ...args });\n    this.effect = effect;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 2);\n    positions.forEach((pos) => {\n      this.addParticle(5, { ...pos }, {\n        x: Math.sign(pos.x - this.actor.pos.x),\n        y: Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { DIRECTIONS, ENERGY_THRESHOLD } from '../../constants';\nimport * as StatusEffect from '../../statusEffects';\nimport { Move } from \"../../Actions/Move\";\nimport { AddStatusEffect } from \"../../Actions/AddStatusEffect\";\nimport { walk } from './walk';\nimport { getRandomInArray } from '../../../helper';\n\nconst drunkWalk = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let originalDirection = [...direction];\n  let chance = Math.random();\n  if (chance < 0.5) {\n    console.log('drunk misstep');\n    let count = 100\n    while ((direction[0] === originalDirection[0] && direction[1] === originalDirection[1]) || count < 0) {\n      count -= 1;\n      direction = DIRECTIONS[getRandomInArray(Object.keys(DIRECTIONS))];\n    }\n    console.log(count);\n  }\n\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new Move({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }))\n}\n\nexport const drunkenFist = (engine, damageBuff = 1) => {\n  let currentActor = engine.actors[engine.currentActor];\n\n  let effect = new StatusEffect.Base({\n    game: engine.game,\n    actor: currentActor,\n    name: 'Drunk',\n    lifespan: 1000,\n    stepInterval: 100,\n    allowDuplicates: false,\n    renderer: {\n      color: '#c45ffd',\n      background: '#424242',\n      character: '?'\n    },\n    onStart: () => {\n      currentActor.attackDamage += damageBuff;\n      currentActor.renderer.character = '?';\n      console.log(`${currentActor.name} took a sip of sake.`);\n      currentActor.keymap.w = {\n        activate: () => drunkWalk(DIRECTIONS.N, engine),\n        label: 'drunken walk'\n      }\n      currentActor.keymap.a = {\n        activate: () => drunkWalk(DIRECTIONS.W, engine),\n        label: 'drunken walk'\n      }\n      currentActor.keymap.s = {\n        activate: () => drunkWalk(DIRECTIONS.S, engine),\n        label: 'drunken walk'\n      }\n      currentActor.keymap.d = {\n        activate: () => drunkWalk(DIRECTIONS.E, engine),\n        label: 'drunken walk'\n      }\n    },\n    onStop: () => {\n      currentActor.attackDamage -= damageBuff;\n      currentActor.renderer.character = 'R';\n      console.log(`${currentActor.name} recovered from drunkeness.`);\n      currentActor.keymap.w = {\n        activate: () => walk(DIRECTIONS.N, engine),\n        label: 'walk'\n      }\n      currentActor.keymap.a = {\n        activate: () => walk(DIRECTIONS.W, engine),\n        label: 'walk'\n      }\n      currentActor.keymap.s = {\n        activate: () => walk(DIRECTIONS.S, engine),\n        label: 'walk'\n      }\n      currentActor.keymap.d = {\n        activate: () => walk(DIRECTIONS.E, engine),\n        label: 'walk'\n      }\n    },\n  });\n  currentActor.setNextAction(new AddStatusEffect({\n    effect,\n    actor: currentActor,\n    game: engine.game,\n    processDelay: 100,\n    particleTemplate: {\n      renderer: {\n        color: '#c45ffd',\n        background: '#424242',\n        character: '?'\n      }\n    },\n  }));\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport * as Constant from '../constants';\n\nexport class MultiTargetAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let attackSuccess = this.actor.attack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess)\n        success = true;\n    });\n    this.addParticle(particlePath.length + 1, particlePos, null, renderer, Constant.PARTICLE_TYPE.path, particlePath);\n    if (success) {\n      this.actor.energy -= this.energyCost;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Attack } from \"../../Actions/Attack\";\nimport { getDirectionKey, DIRECTIONS, ENERGY_THRESHOLD, THEMES } from '../../constants';\n\n\nconst keyMapChop = (engine, initiatedBy, previousKeymap, animations) => {\n  let actor = engine.actors[engine.currentActor];\n  const goToPreviousKeymap = () => {\n    initiatedBy.keymap = previousKeymap;\n    // animation code\n    if (animations.length) {\n      animations.forEach((animation) => engine.game.display.removeAnimation(animation.id))\n    }\n    // end\n  }\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Cancel Chop',\n    },\n    w: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.N[0], //[0, -1]\n            y: actor.pos.y + DIRECTIONS.N[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate N',\n    },\n    d: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.E[0],\n            y: actor.pos.y + DIRECTIONS.E[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate E',\n    },\n    s: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.S[0],\n            y: actor.pos.y + DIRECTIONS.S[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate S',\n    },\n    a: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.W[0],\n            y: actor.pos.y + DIRECTIONS.W[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate W',\n    },\n  };\n}\n\nexport const chop = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n\n  // animation code: could be abstrated for easier use\n  const directions = [\n    DIRECTIONS.N,\n    DIRECTIONS.E,\n    DIRECTIONS.S,\n    DIRECTIONS.W,\n  ];\n\n  let animations = [];\n\n  directions.forEach((direction) => {\n    let pos = {\n      x: currentActor.pos.x + direction[0],\n      y: currentActor.pos.y + direction[1],\n    }\n    const animation = engine.game.display.addAnimation(1, { x: pos.x, y: pos.y, color: THEMES.SOLARIZED.base3 })\n    animations.push(animation);\n  })\n  // end\n\n  currentActor.keymap = keyMapChop(engine, currentActor, { ...currentActor.keymap }, animations);\n}","import {ActionResource} from './ActionResource';\n\nexport class ChakraResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Chakra';\n    this.actorResourcePath = 'charge';\n    this.renderer = { color: '#224c92', background: '#13b8d7', character: '' }\n  }\n}","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport * as Constant from '../constants';\n\nexport class ReleaseGrab extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const releasedEntity = this.actor.release();\n    if (releasedEntity) {\n      this.actor.energy -= this.energyCost;\n      // add particles\n      this.addParticle(2, { ...releasedEntity.pos }, { x: 0, y: 0 }, Constant.PARTICLE_TEMPLATES.succede.renderer);\n      success = true;\n      SOUNDS.release_0.play();\n    }\n    ;\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport * as Constant from '../constants';\n\nexport class GrabDirection extends Base {\n  constructor({ targetPos, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.actor.grab(this.targetPos)) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n      // add particles\n      this.addParticle(2, { ...this.targetPos }, { x: 0, y: 0 }, Constant.PARTICLE_TEMPLATES.succede.renderer);\n      SOUNDS.grab_0.play();\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { ReleaseGrab } from \"../../Actions/ReleaseGrab\";\nimport { GrabDirection } from \"../../Actions/GrabDirection\";\nimport * as Constant from '../../constants';\nimport { createFourDirectionMoveOptions } from '../helper';\n\nconst grabDirection = (direction, engine, actor, animation) => {\n  const pos = {\n    x: actor.pos.x + direction[0],\n    y: actor.pos.y + direction[1],\n  };\n  actor.setNextAction(\n    new GrabDirection({\n      targetPos: pos,\n      game: engine.game,\n      actor,\n      energyCost: Constant.ENERGY_THRESHOLD,\n    })\n  )\n}\n\n\nconst keymapCursorToGrabEntity = (engine, initiatedBy, initialKeymap, animations) => {\n  const goToPreviousKeymap = () => {\n    initiatedBy.keymap = initialKeymap;\n    // animation code\n    if (animations.length) {\n      animations.forEach((animation) => engine.game.display.removeAnimation(animation.id))\n    }\n    // end\n  }\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Cancel Grab',\n    },\n    ...createFourDirectionMoveOptions(\n      (direction, engine) => {\n        grabDirection(direction, engine, initiatedBy);\n        goToPreviousKeymap();\n      },\n      engine,\n      'grab',\n    )\n  }\n}\n\nexport const activateGrab = (engine) => {\n  let game = engine.game;\n  let currentActor = engine.actors[game.engine.currentActor]\n  let initialKeymap = currentActor.keymap;\n\n  // animation code: could be abstrated for easier use\n  const directions = [\n    Constant.DIRECTIONS.N,\n    Constant.DIRECTIONS.E,\n    Constant.DIRECTIONS.S,\n    Constant.DIRECTIONS.W,\n  ];\n\n  let animations = [];\n\n  directions.forEach((direction) => {\n    let pos = {\n      x: currentActor.pos.x + direction[0],\n      y: currentActor.pos.y + direction[1],\n    }\n    const animation = engine.game.display.addAnimation(1, { x: pos.x, y: pos.y, color: Constant.THEMES.SOLARIZED.base3 })\n    animations.push(animation);\n  }) \n  // end\n\n  currentActor.keymap = keymapCursorToGrabEntity(engine, currentActor, initialKeymap, animations);\n}\n\nexport const releaseGrab = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new ReleaseGrab({\n    game: engine.game,\n    actor,\n    energyCost: Constant.ENERGY_THRESHOLD\n  }))\n}","// import deps\nimport * as Item from '../items';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport * as Constant from '../constants';\nimport * as Keymap from '../Keymap';\nimport { createEightDirectionMoveOptions } from '../Keymap/helper';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine) => {\n    return {\n      ...createEightDirectionMoveOptions(Keymap.walk, engine),\n      s: {\n        activate: () => Keymap.none(engine),\n        label: 'stay',\n      },\n      l: {\n        activate: () => Keymap.activateFlyingLotus(engine),\n        label: 'Flying Lotus',\n      },\n      k: {\n        activate: () => Keymap.removeWeights(engine, 200),\n        label: 'Remove wraps',\n      },\n      j: {\n        activate: () => Keymap.drunkenFist(engine),\n        label: 'Sip Sake',\n      },\n      h: {\n        activate: () => Keymap.leafWhirlwind(engine),\n        label: 'Leaf Whirlwind',\n      },\n      g: {\n        activate: () => Keymap.openInnerGate(engine),\n        label: 'Gate of Opening',\n      },\n      i: {\n        activate: () => Keymap.activateInventory(engine),\n        label: 'Open Inventory',\n      },\n      o: {\n        activate: () => Keymap.activateEquipment(engine),\n        label: 'Open Equipment',\n      },\n      u: {\n        activate: () => Keymap.activateDropItem(engine),\n        label: 'Drop Item',\n      },\n      p: {\n        activate: () => Keymap.pickupRandom(engine),\n        label: 'Pickup',\n      },\n      t: {\n        activate: () => Keymap.activateThrow(engine),\n        label: 'Throw',\n      },\n      // DEV KEYS\n      y: {\n        activate: () => Keymap.addActor(engine.game),\n        label: 'Add NPC',\n      },\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'R',\n      color: Constant.THEMES.SOLARIZED.base3,\n      background: Constant.THEMES.NARUTO.rock_lee,\n    },\n    name: 'Rock Lee',\n    actions: [],\n    speed: 400,\n    durability: 20,\n    presentingUI: true,\n    keymap: keymap(engine),\n  })\n\n  // add default items to container\n  const kunais = Array(100).fill('').map(() => Item.directionalKunai(engine, { ...actor.pos }, null, 10));\n  const swords = Array(2).fill('').map(() => Item.sword(engine));\n  actor.container = [\n    new ContainerSlot({\n      itemType: kunais[0].name,\n      items: kunais,\n    }),\n    new ContainerSlot({\n      itemType: swords[0].name,\n      items: swords,\n    }),\n  ]\n\n  return actor;\n}","import { Say } from \"../../Actions/Say\";\nimport * as Constant from '../../constants';\nimport { ChakraResource } from '../../Actions/ActionResources/ChakraResource';\nimport { EnergyResource } from '../../Actions/ActionResources/EnergyResource';\n\nexport const none = (engine, actor) => {\n  // let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Say({\n    message: 'standing still...',\n    game: engine.game,\n    actor,\n    energyCost: Constant.ENERGY_THRESHOLD,\n    requiredResources: [\n      new EnergyResource({ getResourceCost: () => Constant.ENERGY_THRESHOLD }),\n      new ChakraResource({ getResourceCost: () => 1 }),\n    ],\n  }))\n}","import * as StatusEffect from '../../statusEffects';\nimport { AddStatusEffect } from \"../../Actions/AddStatusEffect\";\n\nexport const removeWeights = (engine, speedBoost = 600, damageDebuff = 1) => {\n  let currentActor = engine.actors[engine.currentActor];\n\n  let effect = new StatusEffect.Base({\n    game: engine.game,\n    actor: currentActor,\n    name: 'Removed wraps (weights)',\n    lifespan: 1000,\n    stepInterval: 100,\n    allowDuplicates: false,\n    renderer: {\n      color: '#424242',\n      background: '#e6e6e6',\n      character: '〣'\n    },\n    onStart: () => {\n      currentActor.speed += speedBoost;\n      currentActor.attackDamage = Math.max(0, currentActor.attackDamage - damageDebuff);\n      currentActor.energy += speedBoost;\n      currentActor.renderer.character = '〣'\n      console.log(`${currentActor.name} removed weighted wraps.`);\n    },\n    onStop: () => {\n      currentActor.speed -= speedBoost;\n      currentActor.attackDamage += damageDebuff;\n      currentActor.renderer.character = 'R'\n      console.log(`${currentActor.name} rewrapped weights.`);\n    },\n  });\n  currentActor.setNextAction(new AddStatusEffect({\n    effect,\n    actor: currentActor,\n    game: engine.game,\n    particleTemplate: {\n      renderer: {\n        color: '#424242',\n        background: '#e6e6e6',\n        character: '〣'\n      }\n    }\n  }));\n}","import { MultiTargetAttack } from \"../../Actions/MultiTargetAttack\";\nimport { ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../../constants';\n\nexport const leafWhirlwind = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let targetPositions = [\n    {\n      x: actor.pos.x - 1,\n      y: actor.pos.y,\n    },\n    {\n      x: actor.pos.x - 1,\n      y: actor.pos.y - 1,\n    },\n    {\n      x: actor.pos.x,\n      y: actor.pos.y - 1,\n    },\n    {\n      x: actor.pos.x + 1,\n      y: actor.pos.y - 1,\n    },\n    {\n      x: actor.pos.x + 1,\n      y: actor.pos.y,\n    },\n    {\n      x: actor.pos.x + 1,\n      y: actor.pos.y + 1,\n    },\n    {\n      x: actor.pos.x,\n      y: actor.pos.y + 1,\n    },\n    {\n      x: actor.pos.x - 1,\n      y: actor.pos.y + 1,\n    },\n  ]\n\n  actor.setNextAction(new MultiTargetAttack({\n    targetPositions,\n    game: engine.game,\n    actor,\n    energyCost: (ENERGY_THRESHOLD * 2),\n    particleTemplate: PARTICLE_TEMPLATES.leaf,\n  }))\n}","import * as StatusEffect from '../../statusEffects';\nimport { AddStatusEffect } from \"../../Actions/AddStatusEffect\";\nimport {THEMES} from '../../constants';\n\nexport const openInnerGate = (engine) => {\n  let currentActor = engine.actors[engine.currentActor];\n  let nextGate = currentActor.setNextGate();\n  if (nextGate) {\n    let effect = new StatusEffect.Base({\n      game: engine.game,\n      actor: currentActor,\n      name: nextGate.name,\n      lifespan: -1,\n      stepInterval: 100,\n      allowDuplicates: false,\n      renderer: {\n        background: THEMES.NARUTO.rock_lee,\n        color: '#24fe88',\n        character: nextGate.character,\n      },\n      onStart: () => {\n        currentActor.speed += nextGate.speedBuff;\n        currentActor.energy += nextGate.speedBuff;\n        currentActor.attackDamage += nextGate.damageBuff;\n        currentActor.renderer.character = nextGate.character;\n        console.log(`${currentActor.name} opened the ${nextGate.name}.`);\n        currentActor.decreaseDurability(nextGate.durabilityDebuff);\n        currentActor.decreaseDurability(0);\n        console.log(`${currentActor.name} suffers ${nextGate.durabilityDebuff} damage from physical stress.`)\n        let nextGateToLabel = currentActor.getNextGate();\n        if (nextGateToLabel) {\n          currentActor.keymap.g.label = nextGateToLabel.name;\n        } else {\n          delete currentActor.keymap.g;\n        }\n      },\n    });\n    currentActor.setNextAction(new AddStatusEffect({\n      effect,\n      actor: currentActor,\n      game: engine.game,\n      processDelay: 25,\n      particleTemplate: {\n        renderer: {\n          color: '#3cc2bb',\n          background: '#24fe88',\n          character: '#'\n        }\n      }\n    }));\n  }\n}","import { PickupItem } from \"../../Actions/PickupItem\";\nimport { EquipItemFromTile } from \"../../Actions/EquipItemFromTile\";\nimport { ENERGY_THRESHOLD } from '../../constants';\nimport { coordsToString, getRandomInArray } from '../../../helper';\nimport { MESSAGE_TYPE } from '../../message';\n\nexport const pickupRandom = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let entities = engine.game.map[coordsToString(actor.pos)].entities.filter((e) => e.id !== actor.id);\n  if (entities.length > 0) {\n    actor.setNextAction(new PickupItem({\n      item: getRandomInArray(entities),\n      game: engine.game,\n      actor,\n      energyCost: ENERGY_THRESHOLD\n    }));\n  }\n  else {\n    console.log('nothing to pickup.');\n  }\n};\n\nexport const equipRandomFromTile = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let entities = engine.game.map[coordsToString(actor.pos)].entities.filter((e) => e.id !== actor.id);\n  if (entities.length > 0) {\n    actor.setNextAction(new EquipItemFromTile({\n      item: getRandomInArray(entities),\n      game: engine.game,\n      actor,\n      energyCost: ENERGY_THRESHOLD\n    }));\n  }\n  else {\n    engine.game.addMessage(`nothing to equip.`, MESSAGE_TYPE.ACTION);\n  }\n};","import * as Helper from '../../../helper';\nimport * as Constant from '../../constants';\nimport { Bandit, RangedBandit, FireSpread } from '../../Entities/index';\nimport * as Item from '../../items';\n\nconst getBanditStats = () => {\n  let banditLevels = [\n    {\n      name: 'Slingshot',\n      renderer: {\n        character: Helper.getRandomInArray(['r']),\n        color: '#ced5dd',\n        background: '',\n      },\n      durability: 1,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: RangedBandit\n    },\n    {\n      name: 'Buckshot',\n      renderer: {\n        character: Helper.getRandomInArray(['r']),\n        color: '#3fc072',\n        background: '',\n      },\n      durability: 2,\n      attackDamage: 1,\n      speed: 200,\n      entityClass: RangedBandit\n    },\n    {\n      name: 'Ross',\n      renderer: {\n        character: Helper.getRandomInArray(['b']),\n        color: '#ced5dd',\n        background: '',\n      },\n      durability: 1,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: Bandit\n    },\n    {\n      name: 'Kevin',\n      renderer: {\n        character: Helper.getRandomInArray(['b']),\n        color: '#3fc072',\n        background: '',\n      },\n      durability: 2,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: Bandit\n    },\n    {\n      name: 'Jacob',\n      renderer: {\n        character: Helper.getRandomInArray(['b']),\n        color: '#67a1d7',\n        background: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: Bandit\n    },\n    {\n      name: 'Jarod',\n      renderer: {\n        character: Helper.getRandomInArray(['b']),\n        color: '#e16264',\n        background: '',\n      },\n      durability: 1,\n      attackDamage: 5,\n      speed: 300,\n      entityClass: Bandit\n    },\n    {\n      name: 'Bigii',\n      renderer: {\n        character: Helper.getRandomInArray(['b']),\n        color: '#9f62e1',\n        background: '',\n      },\n      durability: 15,\n      attackDamage: 10,\n      speed: 100,\n      entityClass: Bandit\n    },\n  ]\n  return Helper.getRandomInArray(banditLevels);\n}\n\nexport const addActor = (game) => {\n  // let targetEntity = game.engine.actors[game.engine.currentActor]\n  // let pos = Helper.getRandomPos(game.map).coordinates\n  // const banditStats = getBanditStats();\n  // let actor = new RangedBandit({\n  // let actor = new banditStats.entityClass({\n  //   targetEntity,\n  //   pos,\n  //   renderer: banditStats.renderer,\n  //   name: banditStats.name,\n  //   game,\n  //   actions: [],\n  //   attackDamage: banditStats.attackDamage,\n  //   durability: banditStats.durability,\n  //   speed: banditStats.speed,\n  //   // directional projectile destruction breaks engine\n  //   getProjectile: ({pos, targetPos, direction, range}) => Item.directionalKunai(game.engine, { ...pos }, direction, range)\n  //   // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n  // })\n  let actor = new FireSpread({\n    name: 'Pyro',\n    game,\n    renderer: {\n      character: '*',\n      color: Constant.THEMES.SOLARIZED.base3,\n      background: Constant.THEMES.SOLARIZED.red,\n    },\n    timeToSpread: 1,\n    spreadCount: 1,\n    durability: 1,\n    attackDamage: 1,\n    speed: 100,\n  })\n  // game.placeActorOnMap(actor)\n  if (game.randomlyPlaceActorOnMap(actor)) {\n    game.engine.addActor(actor);\n    game.draw();\n  };\n}","import { cloneDeep } from 'lodash';\nimport uuid from 'uuid/v1';\nimport { PlaceItem } from './PlaceItem';\nexport class PlaceItems extends PlaceItem {\n  constructor({ targetPositions = [], ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.targetPositions.forEach((targetPos) => {\n      if (this.game.canOccupyPosition(targetPos, this.entity)) {\n        let clone = cloneDeep(this.entity);\n        clone.game = this.game;\n        clone.id = uuid();\n        clone.pos = targetPos;\n        let placementSuccess = this.game.placeActorOnMap(clone);\n        if (placementSuccess)\n          success = true;\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nexport class PlaceItem extends Base {\n  constructor({ targetPos, entity, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.entity = entity;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.game.canOccupyPosition(this.targetPos, this.entity)) {\n      this.entity.pos = this.targetPos;\n      success = this.game.placeActorOnMap(this.entity);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceItems } from './PlaceItems';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { Wall } from '../Entities/index';\nimport { TYPE } from '../items';\nimport { getDirectionKey, DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\n\n\nconst createSandWall = (engine, pos) => new Wall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.BARRIER,\n  durability: 3,\n});\n\nexport class SandWall extends PlaceItems {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entity = createSandWall(this.game.engine, { ...this.actor.pos });\n  }\n\n  perform () {\n    this.actor.setNextAction(new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    }))\n    return super.perform();\n  }\n};\n\nconst getTargetPositions = (direction, actor) => {\n  let targetPositions = [];\n  let directionKey = getDirectionKey(direction);\n  switch (directionKey) {\n    case 'N':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y - 1,\n        },\n      ]);\n      break;\n    case 'S':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y + 1,\n        },\n        {\n          x: actor.pos.x,\n          y: actor.pos.y + 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    case 'E':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    case 'W':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y,\n        },\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    default:\n      break;\n  }\n  return targetPositions;\n}\n\nexport class PrepareSandWall extends Base {\n  constructor({ \n    sandWallEnergyCost = ENERGY_THRESHOLD, \n    sandWallRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.sandWallEnergyCost = sandWallEnergyCost;\n    this.sandWallRequiredResources = sandWallRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      w: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.N, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate N',\n      }),\n      d: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.E, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate E',\n      }),\n      s: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.S, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate S',\n      }),\n      a: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.W, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate W',\n      }),\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(TYPE.DIRECTIONAL_KUNAI);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    this.actor.removeFromContainer(projectile);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class MoveTargetingCursor extends Base {\n  constructor({ direction, range, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const initiatedFrom = this.actor.getPosition();\n    const targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    const path = Helper.calculatePath(this.game, targetPos, initiatedFrom, 8);\n    const isInRange = this.range ? path.length <= this.range : true;\n    if (isInRange && this.game.canOccupyPosition(targetPos, this.actor)) {\n      this.actor.moveCursorInDirection(this.direction);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { MoveTargetingCursor } from './MoveTargetingCursor';\nimport { MoveSubstitution } from './MoveSubstitution';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { Wall } from '../Entities/index';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES } from '../constants';\n\nconst createSandWall = (engine, pos) => new Wall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.BARRIER,\n  durability: 3,\n})\n\nexport class PrepareSubstitution extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  perform() {\n\n    const pos = this.actor.getPosition();\n    this.actor.activateCursor([{...pos}])\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range: 4,\n        })\n      },\n      a: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range: 4,\n        })\n      },\n      s: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range: 4,\n        })\n      },\n      d: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range: 4,\n        })\n      },\n      r: () => { \n        return new MoveSubstitution({\n          targetPos: { ...this.actor.getCursorPositions()[0] },\n          spawnedEntity: createSandWall(this.game.engine, { ...this.actor.getPosition() }),\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { MovingWall } from '../Entities/index';\nimport { TYPE } from '../items';\nimport { DIRECTIONS } from '../constants';\nimport * as Helper from '../../helper';\n\n\n\nexport class SandPulse extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.interrupt = true\n  }\n\n  perform () {\n    const parameters = {\n      game: this.game,\n      passable: false,\n      pos: this.actor.pos,\n      renderer: {\n        character: ']',\n        color: '#A89078',\n        background: '#D8C0A8',\n      },\n      name: TYPE.KUNAI,\n      durability: 3,\n      range: 10,\n      speed: 300,\n    }\n    const pulseParticles = [\n      new MovingWall({direction: DIRECTIONS.N, ...parameters}),\n      new MovingWall({direction: DIRECTIONS.E, ...parameters}),\n      new MovingWall({direction: DIRECTIONS.S, ...parameters}),\n      new MovingWall({direction: DIRECTIONS.W, ...parameters}),\n    ]\n\n    pulseParticles.forEach((entity) => {\n      const pos = {x: entity.pos.x + entity.direction[0], y: entity.pos.y + entity.direction[1]}\n      entity.pos = pos;\n      const tile = this.game.map[Helper.coordsToString(pos)];\n      tile.entities.push(entity);\n      this.game.engine.addActorAsPrevious(entity);\n    });\n\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\n","import {Base} from './Base';\nimport {MESSAGE_TYPE} from '../message';\n\nexport class SandSkin extends Base {\n  constructor({defenseBuff = 1, ...args}) {\n    super({ ...args });\n    this.name = 'Sand Skin';\n    this.allowDuplicates = false\n    this['actor_background'] = this.actor.renderer.background;\n    this.renderer = {\n      character: '✦️',\n      color: '#A89078',\n      background: '#D8C0A8',\n    }\n    this.onStart = () => {\n      this.actor.defense += defenseBuff;\n      this.game.addMessage(`${this.actor.name} was enveloped in hardened sand.`, MESSAGE_TYPE.INFORMATION);\n      this.actor.renderer.background = '#A89078'\n    }\n    this.onStop = () => {\n      this.actor.defense = Math.max(0, this.actor.defense - defenseBuff);\n      this.game.addMessage(`${this.actor.name}'s hardened sand skin fell away.`, MESSAGE_TYPE.INFORMATION);\n      this.actor.renderer.background = this['actor_background'];\n    }\n  }\n}","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import { AddStatusEffect } from './AddStatusEffect';\nimport { SandSkin } from '../StatusEffects/SandSkin';\nimport * as Constant from '../constants';\n\nexport class AddSandSkinStatusEffect extends AddStatusEffect {\n  constructor({ defenseBuff, ...args }) {\n    super({ ...args });\n    this.processDelay = 25\n    this.effect = new SandSkin({\n      defenseBuff,\n      game: this.game,\n      actor: this.actor,\n      lifespan: Constant.ENERGY_THRESHOLD * 10,\n      stepInterval: Constant.ENERGY_THRESHOLD,\n    });\n    this.particleTemplate = {\n      renderer: {\n        character: '✦️',\n        color: '#A89078',\n        background: '#D8C0A8',\n      }\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { UnequipItemToTile } from './UnequipItemToTile';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenEquipment extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleEquipment = this.actor.equipment;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.equipment.filter((slot) => slot.item).forEach((slot, index) => {\n      keymap[index] = () => new UnequipItemToTile({\n        item: slot.item,\n        game: this.game,\n        actor: this.actor,\n        label: `Unequip ${slot.item.name}`,\n        onSuccess: () => {\n          this.game.visibleEquipment = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { DropItem } from './DropItem';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenDropInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new DropItem({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Drop ${item.name}`,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PickupRandomItem extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      const item = Helper.getRandomInArray(items);\n      this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n      this.actor.addToContainer(item);\n      let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n      this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n      success = true;\n    } \n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","// import deps\nimport * as Item from '../items';\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {ChakraResource} from '../Actions/ActionResources/ChakraResource';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareSandWall} from '../Actions/SandWall';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareSubstitution} from '../Actions/PrepareSubstitution';\nimport {SandPulse} from '../Actions/SandPulse';\nimport {AddSandSkinStatusEffect} from '../Actions/AddSandSkinStatusEffect';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenEquipment} from '../Actions/OpenEquipment';\nimport {OpenDropInventory} from '../Actions/OpenDropInventory';\nimport {CloneSelf} from '../Actions/CloneSelf';\nimport {PickupRandomItem} from '../Actions/PickupRandomItem';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      l: () => new PrepareSandWall({\n        label: 'Sand Wall',\n        game: engine.game,\n        actor,\n        sandWallRequiredResources: [new ChakraResource({ getResourceCost: () => 1 })]\n      }),\n      r: () => new PrepareSubstitution({\n        label: 'Substitution',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [new ChakraResource({ getResourceCost: () => 1 })]\n      }),\n      k: () => new SandPulse({\n        label: 'Sand Pulse',\n        game: engine.game,\n        actor,\n      }),\n      h: () => new AddSandSkinStatusEffect({\n        label: 'Sand Skin',\n        game: engine.game,\n        actor,\n        requiredResources: [\n          new ChakraResource({ getResourceCost: () => 2 }),\n        ],\n      }),\n      c: () => new CloneSelf({\n        label: 'Sand Clone',\n        game: engine.game,\n        actor,\n        cloneArgs: [\n          {\n            attribute: 'renderer',\n            value: { ...actor.renderer, background: '#A89078' }\n          },\n          {\n            attribute: 'ignoredKeys',\n            value: ['g'],\n          },\n        ],\n        requiredResources: [\n          new ChakraResource({ getResourceCost: () => 4 }),\n        ],\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      o: () => new OpenEquipment({\n        label: 'Equipment',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenDropInventory({\n        label: 'Drop Items',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupRandomItem({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Throw',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      })\n      // r: {\n      //   activate: () => Keymap.teleport(engine, 5),\n      //   label: 'substitution',\n      // },\n      // // DEV KEYS\n      // y: {\n      //   activate: () => Keymap.addActor(engine.game),\n      //   label: 'Add NPC',\n      // },\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'G',\n      color: Constant.THEMES.SOLARIZED.base2,\n      background: Constant.THEMES.NARUTO.gaara,\n    },\n    name: 'Gaara',\n    actions: [],\n    speed: 400,\n    durability: 20,\n    charge: 10,\n    game: engine.game,\n    presentingUI: true,\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const kunais = Array(100).fill('').map(() => Item.directionalKunai(engine, { ...actor.pos }, null, 10));\n  const swords = Array(2).fill('').map(() => Item.sword(engine));\n  actor.container = [\n    new ContainerSlot({\n      itemType: kunais[0].name,\n      items: kunais,\n    }),\n    new ContainerSlot({\n      itemType: swords[0].name,\n      items: swords,\n    }),\n  ]\n\n  return actor;\n}","// import deps\nimport { Player } from '../Entities/index'\nimport * as Constant from '../constants';\nimport * as Keymap from '../Keymap';\nimport { createFourDirectionMoveOptions } from '../Keymap/helper';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine) => {\n    return {\n      ...createFourDirectionMoveOptions(Keymap.push, engine, 'push', true),\n      t: {\n        activate: () => Keymap.activateProjectile(engine, 1, 5),\n        label: 'shoot water',\n      },\n      c: {\n        activate: () => Keymap.chop(engine),\n        label: 'chop',\n      },\n      e: {\n        activate: () => Keymap.activateEquipment(engine),\n        label: 'equipment',\n      },\n      p: {\n        activate: () => Keymap.equipRandomFromTile(engine),\n        label: 'pick up',\n      },\n      g: {\n        activate: () => Keymap.activateGrab(engine),\n        label: 'grab',\n      },\n      r: {\n        activate: () => Keymap.releaseGrab(engine),\n        label: 'release',\n      },\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 19, y: 22 },\n    renderer: {\n      character: 'F',\n      sprite: '',\n      color: Constant.THEMES.SOLARIZED.base3,\n      background: Constant.THEMES.SOLARIZED.yellow,\n    },\n    name: Constant.PLAYER_NAME,\n    equipment: Constant.EQUIPMENT_LAYOUTS.limited(),\n    actions: [],\n    speed: 100,\n    durability: 4000,\n    keymap: keymap(engine),\n  })\n\n  // default items to container\n  // const axe = Array(2).fill('').map(() => Item.axe(engine));\n  // actor.container = [\n  //   new Entity.ContainerSlot({\n  //     itemType: axe[0].name,\n  //     items: axe,\n  //   }),\n  // ]\n  return actor;\n}","import RockLee from './RockLee';\nimport Gaara from './Gaara';\nimport FireFighter from './FireFighter';\n\nlet Characters = () => {\n  return {\n    Gaara,\n    RockLee,\n    FireFighter,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key,\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key,\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: null,\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const modeScreen = <Screens.ModeSelect \n      key={SCREENS.MODE_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedMode={this.setSelectedMode.bind(this)}\n      selectedMode={this.state.selectedMode}\n      modes={this.state.modes}\n    />\n    const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.MODE_SELECT:\n        return modeScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App container-fluid\">\n        <Nystrum />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}